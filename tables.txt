-- Define a composite type for reactions (emoji + user_id)
CREATE TYPE reaction_tuple AS (
    emoji TEXT,
    user_id BIGINT
);

CREATE TABLE link_messages (
    id SERIAL PRIMARY KEY,
    message_id BIGINT UNIQUE NOT NULL,
    user_id BIGINT NOT NULL,
    channel_id BIGINT NOT NULL,
    guild_id BIGINT NOT NULL,
    link TEXT NOT NULL,
    domain_name TEXT NOT NULL,
    reactions reaction_tuple[],     -- array of (emoji, user_id) tuples
    reactors BIGINT[],              -- array of unique user_ids who reacted
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE media_messages (
    id SERIAL PRIMARY KEY,
    message_id BIGINT UNIQUE NOT NULL,
    user_id BIGINT NOT NULL,
    channel_id BIGINT NOT NULL,
    guild_id BIGINT NOT NULL,
    media_url TEXT NOT NULL,
    media_type TEXT NOT NULL,
    reactions reaction_tuple[],     -- array of (emoji, user_id) tuples
    reactors BIGINT[],              -- array of unique user_ids who reacted
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);







CREATE TABLE media_messages (
    id SERIAL PRIMARY KEY,            -- Unique ID for each entry
    message_id BIGINT UNIQUE NOT NULL, -- Discord message ID
    user_id BIGINT NOT NULL,           -- ID of the user who posted
    channel_id BIGINT NOT NULL,        -- ID of the channel where the message was posted
    guild_id BIGINT NOT NULL,          -- ID of the server (guild) where the message was posted
    media_type TEXT NOT NULL,          -- Media type (image, video, gif)
    reactions JSONB DEFAULT '{}'::JSONB, -- Store reactions as a JSON object
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- Timestamp when stored
);


Example query:
INSERT INTO media_messages (message_id, user_id, channel_id, guild_id, media_type, reactions)
VALUES (123456789012345678, 987654321098765432, 112233445566778899, 998877665544332211, 'image', '{"üëç": 3, "üòÇ": 1}');
